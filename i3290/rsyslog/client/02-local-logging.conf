###################################################################################################
# Purpose:  Default client rules for all nodes (even those accepting remote input)
###################################################################################################




# Include stock config fragments provided by installed software packages and
# custom fragments we have created. Our local custom fragments are intended
# to provide settings specific to the system or override global settings
# that are common to all systems that are using the SVN+Symlinks setup.
#
# Software packages often drop small files for inclusion in this directory
# to provide settings specific to their needs (i.e., log socket for
# Postfix to access from within its chroot)
#
# These configuration files are processed at this point in order to allow local
# custom conf fragments the opportunity to apply rules before the general rules
# provided by the SVN+Symlinks setup take effect.
include(
    file="/etc/rsyslog.d/*.conf"
    mode="optional"
)





########################################################
# Drop messages originating from imfile input source.
########################################################

if ($inputname == 'imfile') then {

    # Messages at this point have already had a chance to
    # be processed elsewhere (e.g., forwarded on to
    # receiver chain)
    stop
}



########################################################
# Standard local logs
########################################################


# Enable debug logging of local log messages
# action(
#     name="rsyslog-debug-local"
#     template="RSYSLOG_DebugFormat"
#     type="omfile"
#     file="/var/log/rsyslog-debug-local.log"
# )



if ($programname == 'rsyslogd' or $syslogfacility-text == 'syslog') then {

    # Copy all rsyslogd and general syslog facility messages to dedicated file
    # Note: Upstream rsyslog package provides an extended
    # /etc/logrotate.d/rsyslog file that include a reference to this specific
    # file. The upstream 50-default.conf file contains a "traditional" facility
    # based selector for matching against the 'syslog' facility, but we are
    # combining that facility with a programname match so that both go the same
    # log file.
    action(
        name="rsyslog-messages"
        type="omfile"
        file="/var/log/rsyslog.log")

}


# Log kernel generated UFW log messages to file
if ($msg contains "[UFW ") then {

    action(
        name="ufw-messages"
        type="omfile"
        file="/var/log/ufw.log")

    # Prevent duplicating messages into /var/log/syslog
    stop
}


########################################################
# Logging for the mail system.
########################################################

if ($syslogfacility-text == 'mail') then {

    # Catch-all mail log
    # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=644896
    action(
        name="mail-general-log"
        type="omfile"
        file="/var/log/mail.log")

    # Capture subject line entries and duplicate in separate file for easy review
    if $msg contains " info: header Subject: " then {

        action(
            name="mail-subject-lines-log"
            type="omfile"
            file="/var/log/mail-subject-lines.log")
    }

    # Gather all mail errors into one place for easy (or at least easier) review
    if $syslogseverity-text == 'err' then {

        action(
            name="mail-error-log"
            type="omfile"
            file="/var/log/mail.err")
    }

    stop

}



#
# First some standard log files.  Log by facility.
#

if ($syslogfacility-text == 'auth') or ($syslogfacility-text == 'authpriv') then {

    action(
        name="auth-log"
        type="omfile"
        file="/var/log/auth.log")
}

# Keep cron messages in their own dedicated file
if ($syslogfacility-text == 'cron') then {
    action(
        name="cron-log"
        type="omfile"
        file="/var/log/cron.log")

    stop
}

# FIXME: Not 100% sure that the effect is the same
# *.*;auth,authpriv.none      /var/log/syslog
if ($syslogfacility-text != 'authpriv') then {
    action(
        name="general-syslog"
        type="omfile"
        file="/var/log/syslog")
}


if ($syslogfacility-text == 'kern') then {
    action(
        name="kernel-log"
        type="omfile"
        file="/var/log/kern.log")
}


# Emergencies are sent to everybody logged in.
#
#*.emerg                                :omusrmsg:*
# http://www.rsyslog.com/doc/omusrmsg.html
# http://blog.gerhards.net/2011/07/why-omusrmsg-is-evil-and-how-it-is.html
# http://www.rsyslog.com/doc/v8-stable/configuration/modules/omusrmsg.html
if $syslogseverity-text == 'emerg' then {
    action(name="emergency-alert-users" type="omusrmsg" users="*")
}

