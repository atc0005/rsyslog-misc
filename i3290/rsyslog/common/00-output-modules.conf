###################################################################################################
# Purpose: Common output module load statements
###################################################################################################


# Set the default permissions for log files created using the new RainerScript
# syntax. The Legacy syntax config options are still needed for legacy
# rules. These permissions mirror those applied via logrotate.
module(
    load="builtin:omfile"
    fileOwner="syslog"
    fileGroup="adm"
    dirOwner="syslog"
    dirGroup="adm"
    fileCreateMode="0640"
    dirCreateMode="0755"

    # a modern-style logfile format with high-precision timestamps and
    # timezone info. Since the RSYSLOG_FileFormat template is specified
    # already via '$ActionFileDefaultTemplate', we cannot set it again
    # here without rsyslog getting upset (internal ticket #1021).
    # template="RSYSLOG_FileFormat"
)


# Provides the ability to send/receive syslog messages via the reliable RELP
# protocol. This module requires librelp to be present on the system.
# From the user's point of view, imrelp works much like imtcp or imgssapi,
# except that no message loss can occur. Please note that with the currently
# supported relp protocol version, a minor message duplication may occur if
# a network connection between the relp client and relp server breaks after
# the client could successfully send some messages but the server could not
# acknowledge them. The window of opportunity is very slim, but in theory
# this is possible. Future versions of RELP will prevent this. Please also
# note that rsyslogd may lose a few messages if rsyslog is shutdown while a
# network connection to the server is broken and could not yet be recovered.
# Future version of RELP support in rsyslog will prevent that. Please note
# that both scenarios also exists with plain tcp syslog. RELP, even with
# the small nits outlined above, is a much more reliable solution than plain
# tcp syslog and so it is highly suggested to use RELP instead of plain tcp.
# Clients send messages to the RELP server via omrelp.
module(load="omrelp")
