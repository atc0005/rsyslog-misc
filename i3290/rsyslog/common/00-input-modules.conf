###################################################################################################
# Purpose: Common input module load statements
###################################################################################################


# http://www.rsyslog.com/how-to-use-impstats/
# Useful for troubleshooting

# 2) A main queue (main Q)
#
# This shows messages entering the queue (enqueued), as well as any dropped
# messages (discarded.full=0, discarded.nf=0). It also shows how many times
# the queue has become completely full (full=0) and it keeps a running total
# of the maximum size the queue has ever hit (maxqsize=444).
# (All these counters are since rsyslog startup.)
#
# 3) Two output/action queues (NET.local, NET.forward)
#
# These logs queue stats like above, as well as successfully "processed"
# (via omfile and omfwd in this case), indicating successful delivery
# to their final destination (local file or remote TCP receiver, in this case).
#
# 4) Another queue to handle pstats output itself (as I described above)
#
# This example doesn't happen to include DA-mode, which adds another pstats
# log line for the DA portion of the associated action queue.
#
# If you don't give your action queues names, you'll wind up with pstats logs
# referring to things like "action 2", and have a hard time figuring out what
# is going on.
#
# A well-behaved queue will have zero discarded.full and discarded.nf, and
# a low maxqsize, meaning that everything entering the queue is leaving promptly.
# In a backlog situation, you'll see size and maxqsize for an action/output queue
# increase over time, until maxqsize hits your configured queue.size parameter. Then
# the main Q will start increasing in size (and maxqsize) until it approaches
# and exceeds full. Then the discarded.nf and discarded.full counters will
# start climbing.
#module(load="impstats" interval="30")
module(
    load="impstats"
    interval="30"
    log.syslog="off"
    log.file="/var/log/rsyslog-pstats.log"
)


# Provides support for local system logging
#  * explicitly enable listening on the local log socket
#  * annotate log messages with "secure" values (gid, uid, pid, etc)
module(
    load="imuxsock"
    sysSock.use="on"
    SysSock.Annotate="on"
    SysSock.ParseTrusted="on"
)

# provides kernel logging support and enable non-kernel klog messages
# https://bugs.launchpad.net/ubuntu/+source/rsyslog/+bug/1531622
module(load="imklog" permitnonkernelfacility="on")

# provides --MARK-- message capability
module(load="immark")

# Used for picking up local files
# Note: Changed (temporarily?) mode to 'polling' per internal ticket #1046
module(
    load="imfile"
    mode="polling"
)

